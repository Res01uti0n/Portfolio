(function () {
'use strict';

const MODAL_CLASS = {
  searchBtn: `btn--show`,
  navExtra : `extra--show`,
  modal: `modal--show`,
};

/*Показ и скрытие элементов*/
const addClass = (modal, className)=> {
  modal.classList.add(className);
};

const removeClass = (modal, className)=> {
  modal.classList.remove(className);
};

/*Кнопки поиска*/
const searchBtn = document.querySelector(`.search__btn`);

const showBtn = (evt)=> {
  addClass(searchBtn, MODAL_CLASS.searchBtn);
};

const hideBtn = (evt)=> {
  setTimeout(()=> {
    removeClass(searchBtn, MODAL_CLASS.searchBtn);
  }, 3000);
};

/*Напиши нам*/
const writeUsModal = document.querySelector(`.write-us__modal`);

const mapModal = document.querySelector(`.map__modal`);

const navExtra = document.querySelector(`.nav__extra`);

const showAndCloseNav = (evt)=> {
  navExtra.classList.toggle(MODAL_CLASS.navExtra);
};

/*Регулировка тени*/
const shadow = document.querySelector(`.cost-level__depth`);

const getRightSize = (size1, size2)=> {
  let width;
  let left;
  let right;

  if (size1 > size2) {
    width =  size1;
    left = size2;
  } else {
    width =  size2;
    left = size1;
  }

  right = 100 - width;
  width = 100 - left - right;

  shadow.style.width = width + `%`;
  shadow.style.left = left + `%`;
  shadow.style.right = right + `%`;
};

const getShadowSize = (max) => {
  const pinCoords = {
    pin1: document.querySelector(`.cost-level__pin`).style.left.slice(0, -2),
    pin2: document.querySelector(`.pin--2`).style.left.slice(0, -2),
  };

  const pin1size = Math.floor(pinCoords.pin1 / (max / 100));
  const pin2size = Math.floor(pinCoords.pin2 / (max / 100));

  getRightSize(pin1size, pin2size);

};

/*Получение максимальной и минимальной цены*/
const MAX_RANGE_PRICE = 8400;
const inputMin = document.querySelector(`.min-cost`);
const inputMax = document.querySelector(`.max-cost`);
const outputMin = document.querySelector(`.output__min`);
const outputMax = document.querySelector(`.output__max`);

const getRightPrice = (percents) => {
  const price = MAX_RANGE_PRICE * percents / 100;

  return price;
};

const getMinAndMaxPrice = () => {
  const shadowPosition = {
    left: getRightPrice(shadow.style.left.slice(0, -1)),
    right: getRightPrice(shadow.style.right.slice(0, -1)),
    width: getRightPrice(shadow.style.width.slice(0, -1)),
  };

  const minPrice = MAX_RANGE_PRICE - (shadowPosition.width + shadowPosition.right);
  const maxPrice = MAX_RANGE_PRICE - shadowPosition.right;

  inputMin.setAttribute(`value`, minPrice);
  inputMax .setAttribute(`value`, maxPrice);
  outputMin.textContent = `от ${minPrice}`;
  outputMax.textContent = `до ${maxPrice}`;
};

/*Перемещение ползунка*/
const getCooords = (elem) => {
  const box = elem.getBoundingClientRect();

  return {
    left: box.left + pageXOffset,
  }
};

const setPinPosition = (pin, pinXCoord) => {
  pin.style.left = pinXCoord + `px`;
};

const range = document.querySelector(`.cost-level__line`);
const MIN_X_RANGE = 0;
const MAX_X_RANGE = 190;

const changeRange = (evt)=> {
  const coordsRange = getCooords(range);
  const coordsPin = getCooords(evt.target);
  const shiftX = evt.pageX - coordsPin.left + coordsRange.left;

  const onPinMove = (evtMove) => {
    let pinX = evtMove.pageX - shiftX;

    const checkArea = (position, min, max) => {

      if (position > max) {
        position = max;
      }

      if (position < min ) {
        position = min;
      }

      pinX = position;
      return pinX;
    };

    const pinCurrentPosition = checkArea(pinX, MIN_X_RANGE, MAX_X_RANGE);
    setPinPosition(evt.target, pinCurrentPosition);
    getShadowSize(MAX_X_RANGE);
    getMinAndMaxPrice();
  };

  document.addEventListener(`mousemove`, onPinMove);

  let onPinMouseUp = () => {
    document.removeEventListener(`mousemove`, onPinMove);
    document.removeEventListener(`mouseup`, onPinMouseUp);
  };

  document.addEventListener(`mouseup`, onPinMouseUp);
};

const searchInput = document.querySelector(`#search`);

const setSearch = (evt) => {
  evt.preventDefault();
  let keyText = searchInput.value;

  keyText = keyText.replace(/&/g, "&amp;").replace(/</g, '&lt').replace(/>/g, '&gt');

  console.log(keyText);

};

/*Создание карточек товара*/

searchInput.addEventListener(`focus`, showBtn);
searchInput.addEventListener(`blur`,  hideBtn);
searchBtn.addEventListener(`click`, setSearch);

const btnCatalog = document.querySelector(`.item--catalog`);

btnCatalog.addEventListener(`click`, showAndCloseNav);

const costPin = document.querySelector(`.cost-level__pin`);
const costPin2 = document.querySelector(`.pin--2`);

costPin.addEventListener(`mousedown`, changeRange);
costPin2.addEventListener(`mousedown`, changeRange);

/*createGoods();*/

}());

//# sourceMappingURL=data:application/json;base64,
