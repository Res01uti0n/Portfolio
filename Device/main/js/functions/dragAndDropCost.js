(function (exports) {
'use strict';

const shadow$1 = document.querySelector(`.cost-level__depth`);

const getRightSize = (size1, size2)=> {
  let width;
  let left;
  let right;

  if (size1 > size2) {
    width =  size1;
    left = size2;
  } else {
    width =  size2;
    left = size1;
  }

  right = 100 - width;
  width = 100 - left - right;

  shadow$1.style.width = width + `%`;
  shadow$1.style.left = left + `%`;
  shadow$1.style.right = right + `%`;
};

const getShadowSize = (max) => {
  const pinCoords = {
    pin1: document.querySelector(`.cost-level__pin`).style.left.slice(0, -2),
    pin2: document.querySelector(`.pin--2`).style.left.slice(0, -2),
  };

  const pin1size = Math.floor(pinCoords.pin1 / (max / 100));
  const pin2size = Math.floor(pinCoords.pin2 / (max / 100));

  getRightSize(pin1size, pin2size);

};

const MAX_RANGE_PRICE = 8400;
const inputMin = document.querySelector(`#min-cost`);
const inputMax = document.querySelector(`#max-cost`);
const outputMin = document.querySelector(`.output__min`);
const outputMax = document.querySelector(`.output__max`);

const getRightPrice = (percents) => {
  const price = Math.floor(MAX_RANGE_PRICE/100 * percents);
  console.log(price);
};

const getMinAndMaxPrice = () => {
  const shadowPosition = {
    left: getRightPrice(shadow.style.left.slice(0, -2)),
    right: getRightPrice(shadow.style.right.slice(0, -2)),
    width: getRightPrice(shadow.style.width.slice(0, -2)),
  };

  const minPrice = MAX_RANGE_PRICE - (shadowPosition.width + shadowPosition.right);
  const maxPrice = MAX_RANGE_PRICE - shadowPosition.right;

  inputMin.value = minPrice;
  inputMax.value = maxPrice;
  outputMin.textContent = `от ${minPrice}`;
  outputMax.textContent = `до ${maxPrice}`;
};

const getCooords = (elem) => {
  const box = elem.getBoundingClientRect();

  return {
    left: box.left + pageXOffset,
  }
};

const setPinPosition = (pin, pinXCoord) => {
  pin.style.left = pinXCoord + `px`;
};

const range = document.querySelector(`.cost-level__line`);
const costPin = document.querySelector(`.cost-level__pin`);
const costPin2 = document.querySelectorAll(`.pin--2`);
const shadow = document.querySelector(`.cost-level__depth`);
const MIN_X_RANGE = 0;
const MAX_X_RANGE = 190;

const changeRange = (evt)=> {
  const coordsRange = getCooords(range);
  const coordsPin = getCooords(evt.target);
  const shiftX = evt.pageX - coordsPin.left + coordsRange.left;

  const onPinMove = (evtMove) => {
    let pinX = evtMove.pageX - shiftX;

    const checkArea = (position, min, max) => {

      if (position > max) {
        position = max;
      }

      if (position < min ) {
        position = min;
      }

      pinX = position;
      return pinX;
    };

    const pinCurrentPosition = checkArea(pinX, MIN_X_RANGE, MAX_X_RANGE);
    setPinPosition(evt.target, pinCurrentPosition);
    getShadowSize(MAX_X_RANGE);
    getMinAndMaxPrice();
  };

  document.addEventListener(`mousemove`, onPinMove);

  let onPinMouseUp = () => {
    document.removeEventListener(`mousemove`, onPinMove);
    document.removeEventListener(`mouseup`, onPinMouseUp);
  };

  document.addEventListener(`mouseup`, onPinMouseUp);
};

exports.changeRange = changeRange;
exports.shadow = shadow;

}((this.dragAndDropCost = this.dragAndDropCost || {})));

//# sourceMappingURL=data:application/json;base64,
