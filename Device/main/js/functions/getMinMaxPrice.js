(function (exports) {
'use strict';

const shadow$1 = document.querySelector(`.cost-level__depth`);

const range = document.querySelector(`.cost-level__line`);
const costPin = document.querySelector(`.cost-level__pin`);
const costPin2 = document.querySelectorAll(`.pin--2`);
const shadow = document.querySelector(`.cost-level__depth`);

const MAX_RANGE_PRICE = 8400;
const inputMin = document.querySelector(`#min-cost`);
const inputMax = document.querySelector(`#max-cost`);
const outputMin = document.querySelector(`.output__min`);
const outputMax = document.querySelector(`.output__max`);

const getRightPrice = (percents) => {
  const price = Math.floor(MAX_RANGE_PRICE/100 * percents);
  console.log(price);
};

const getMinAndMaxPrice = () => {
  const shadowPosition = {
    left: getRightPrice(shadow.style.left.slice(0, -2)),
    right: getRightPrice(shadow.style.right.slice(0, -2)),
    width: getRightPrice(shadow.style.width.slice(0, -2)),
  };

  const minPrice = MAX_RANGE_PRICE - (shadowPosition.width + shadowPosition.right);
  const maxPrice = MAX_RANGE_PRICE - shadowPosition.right;

  inputMin.value = minPrice;
  inputMax.value = maxPrice;
  outputMin.textContent = `от ${minPrice}`;
  outputMax.textContent = `до ${maxPrice}`;
};

exports.getMinAndMaxPrice = getMinAndMaxPrice;

}((this.getMinMaxPrice = this.getMinMaxPrice || {})));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25zL2dldE1pbk1heFByaWNlLmpzIiwic291cmNlcyI6WyJzb3VyY2UvanMvZnVuY3Rpb25zL2dldFNoYWRvd1NpemUuanMiLCJzb3VyY2UvanMvZnVuY3Rpb25zL2RyYWdBbmREcm9wQ29zdC5qcyIsInNvdXJjZS9qcy9mdW5jdGlvbnMvZ2V0TWluTWF4UHJpY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2hhZG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmNvc3QtbGV2ZWxfX2RlcHRoYCk7XG5cbmNvbnN0IGdldFJpZ2h0U2l6ZSA9IChzaXplMSwgc2l6ZTIpPT4ge1xuICBsZXQgd2lkdGg7XG4gIGxldCBsZWZ0O1xuICBsZXQgcmlnaHQ7XG5cbiAgaWYgKHNpemUxID4gc2l6ZTIpIHtcbiAgICB3aWR0aCA9ICBzaXplMTtcbiAgICBsZWZ0ID0gc2l6ZTI7XG4gIH0gZWxzZSB7XG4gICAgd2lkdGggPSAgc2l6ZTI7XG4gICAgbGVmdCA9IHNpemUxO1xuICB9XG5cbiAgcmlnaHQgPSAxMDAgLSB3aWR0aDtcbiAgd2lkdGggPSAxMDAgLSBsZWZ0IC0gcmlnaHQ7XG5cbiAgc2hhZG93LnN0eWxlLndpZHRoID0gd2lkdGggKyBgJWA7XG4gIHNoYWRvdy5zdHlsZS5sZWZ0ID0gbGVmdCArIGAlYDtcbiAgc2hhZG93LnN0eWxlLnJpZ2h0ID0gcmlnaHQgKyBgJWA7XG59O1xuXG5jb25zdCBnZXRTaGFkb3dTaXplID0gKG1heCkgPT4ge1xuICBjb25zdCBwaW5Db29yZHMgPSB7XG4gICAgcGluMTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmNvc3QtbGV2ZWxfX3BpbmApLnN0eWxlLmxlZnQuc2xpY2UoMCwgLTIpLFxuICAgIHBpbjI6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5waW4tLTJgKS5zdHlsZS5sZWZ0LnNsaWNlKDAsIC0yKSxcbiAgfTtcblxuICBjb25zdCBwaW4xc2l6ZSA9IE1hdGguZmxvb3IocGluQ29vcmRzLnBpbjEgLyAobWF4IC8gMTAwKSk7XG4gIGNvbnN0IHBpbjJzaXplID0gTWF0aC5mbG9vcihwaW5Db29yZHMucGluMiAvIChtYXggLyAxMDApKTtcblxuICBnZXRSaWdodFNpemUocGluMXNpemUsIHBpbjJzaXplKTtcblxufTtcblxuZXhwb3J0IHtnZXRTaGFkb3dTaXplfTtcbiIsImltcG9ydCB7Z2V0U2hhZG93U2l6ZX0gZnJvbSBcIi4vZ2V0U2hhZG93U2l6ZVwiO1xuaW1wb3J0IHtnZXRNaW5BbmRNYXhQcmljZX0gZnJvbSBcIi4vZ2V0TWluTWF4UHJpY2VcIjtcblxuY29uc3QgZ2V0Q29vb3JkcyA9IChlbGVtKSA9PiB7XG4gIGNvbnN0IGJveCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgcmV0dXJuIHtcbiAgICBsZWZ0OiBib3gubGVmdCArIHBhZ2VYT2Zmc2V0LFxuICB9XG59O1xuXG5jb25zdCBzZXRQaW5Qb3NpdGlvbiA9IChwaW4sIHBpblhDb29yZCkgPT4ge1xuICBwaW4uc3R5bGUubGVmdCA9IHBpblhDb29yZCArIGBweGA7XG59O1xuXG5jb25zdCByYW5nZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5jb3N0LWxldmVsX19saW5lYCk7XG5jb25zdCBjb3N0UGluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmNvc3QtbGV2ZWxfX3BpbmApO1xuY29uc3QgY29zdFBpbjIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAucGluLS0yYCk7XG5jb25zdCBzaGFkb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuY29zdC1sZXZlbF9fZGVwdGhgKTtcbmNvbnN0IE1JTl9YX1JBTkdFID0gMDtcbmNvbnN0IE1BWF9YX1JBTkdFID0gMTkwO1xuXG5jb25zdCBjaGFuZ2VSYW5nZSA9IChldnQpPT4ge1xuICBjb25zdCBjb29yZHNSYW5nZSA9IGdldENvb29yZHMocmFuZ2UpO1xuICBjb25zdCBjb29yZHNQaW4gPSBnZXRDb29vcmRzKGV2dC50YXJnZXQpO1xuICBjb25zdCBzaGlmdFggPSBldnQucGFnZVggLSBjb29yZHNQaW4ubGVmdCArIGNvb3Jkc1JhbmdlLmxlZnQ7XG5cbiAgY29uc3Qgb25QaW5Nb3ZlID0gKGV2dE1vdmUpID0+IHtcbiAgICBsZXQgcGluWCA9IGV2dE1vdmUucGFnZVggLSBzaGlmdFg7XG5cbiAgICBjb25zdCBjaGVja0FyZWEgPSAocG9zaXRpb24sIG1pbiwgbWF4KSA9PiB7XG5cbiAgICAgIGlmIChwb3NpdGlvbiA+IG1heCkge1xuICAgICAgICBwb3NpdGlvbiA9IG1heDtcbiAgICAgIH1cblxuICAgICAgaWYgKHBvc2l0aW9uIDwgbWluICkge1xuICAgICAgICBwb3NpdGlvbiA9IG1pbjtcbiAgICAgIH1cblxuICAgICAgcGluWCA9IHBvc2l0aW9uO1xuICAgICAgcmV0dXJuIHBpblg7XG4gICAgfTtcblxuICAgIGNvbnN0IHBpbkN1cnJlbnRQb3NpdGlvbiA9IGNoZWNrQXJlYShwaW5YLCBNSU5fWF9SQU5HRSwgTUFYX1hfUkFOR0UpO1xuICAgIHNldFBpblBvc2l0aW9uKGV2dC50YXJnZXQsIHBpbkN1cnJlbnRQb3NpdGlvbik7XG4gICAgZ2V0U2hhZG93U2l6ZShNQVhfWF9SQU5HRSk7XG4gICAgZ2V0TWluQW5kTWF4UHJpY2UoKTtcbiAgfTtcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKGBtb3VzZW1vdmVgLCBvblBpbk1vdmUpO1xuXG4gIGxldCBvblBpbk1vdXNlVXAgPSAoKSA9PiB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihgbW91c2Vtb3ZlYCwgb25QaW5Nb3ZlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGBtb3VzZXVwYCwgb25QaW5Nb3VzZVVwKTtcbiAgfTtcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKGBtb3VzZXVwYCwgb25QaW5Nb3VzZVVwKTtcbn07XG5cbmV4cG9ydCB7Y2hhbmdlUmFuZ2UsIHNoYWRvd307XG4iLCJpbXBvcnQge3NoYWRvd30gZnJvbSBcIi4vZHJhZ0FuZERyb3BDb3N0XCI7XG5cbmNvbnN0IE1BWF9SQU5HRV9QUklDRSA9IDg0MDA7XG5jb25zdCBpbnB1dE1pbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNtaW4tY29zdGApO1xuY29uc3QgaW5wdXRNYXggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjbWF4LWNvc3RgKTtcbmNvbnN0IG91dHB1dE1pbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5vdXRwdXRfX21pbmApO1xuY29uc3Qgb3V0cHV0TWF4ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm91dHB1dF9fbWF4YCk7XG5cbmNvbnN0IGdldFJpZ2h0UHJpY2UgPSAocGVyY2VudHMpID0+IHtcbiAgY29uc3QgcHJpY2UgPSBNYXRoLmZsb29yKE1BWF9SQU5HRV9QUklDRS8xMDAgKiBwZXJjZW50cyk7XG4gIGNvbnNvbGUubG9nKHByaWNlKTtcbn07XG5cbmNvbnN0IGdldE1pbkFuZE1heFByaWNlID0gKCkgPT4ge1xuICBjb25zdCBzaGFkb3dQb3NpdGlvbiA9IHtcbiAgICBsZWZ0OiBnZXRSaWdodFByaWNlKHNoYWRvdy5zdHlsZS5sZWZ0LnNsaWNlKDAsIC0yKSksXG4gICAgcmlnaHQ6IGdldFJpZ2h0UHJpY2Uoc2hhZG93LnN0eWxlLnJpZ2h0LnNsaWNlKDAsIC0yKSksXG4gICAgd2lkdGg6IGdldFJpZ2h0UHJpY2Uoc2hhZG93LnN0eWxlLndpZHRoLnNsaWNlKDAsIC0yKSksXG4gIH07XG5cbiAgY29uc3QgbWluUHJpY2UgPSBNQVhfUkFOR0VfUFJJQ0UgLSAoc2hhZG93UG9zaXRpb24ud2lkdGggKyBzaGFkb3dQb3NpdGlvbi5yaWdodCk7XG4gIGNvbnN0IG1heFByaWNlID0gTUFYX1JBTkdFX1BSSUNFIC0gc2hhZG93UG9zaXRpb24ucmlnaHQ7XG5cbiAgaW5wdXRNaW4udmFsdWUgPSBtaW5QcmljZTtcbiAgaW5wdXRNYXgudmFsdWUgPSBtYXhQcmljZTtcbiAgb3V0cHV0TWluLnRleHRDb250ZW50ID0gYNC+0YIgJHttaW5QcmljZX1gO1xuICBvdXRwdXRNYXgudGV4dENvbnRlbnQgPSBg0LTQviAke21heFByaWNlfWA7XG59O1xuXG5leHBvcnQge2dldE1pbkFuZE1heFByaWNlfTtcbiJdLCJuYW1lcyI6WyJzaGFkb3ciXSwibWFwcGluZ3MiOiI7OztBQUFBLE1BQU1BLFFBQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEFBRTVELEFBQ0UsQUFDQSxBQUNBLEFBRUEsQUFRQSxBQUNBLEFBRUEsQUFDQSxBQUNBLEFBQWlDLEFBR25DLEFBQ0UsQUFLQSxBQUNBLEFBRUEsQUFBaUMsQUFJbkMsQUFBdUI7O0FDckJ2QixNQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO0FBQzFELE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7QUFDM0QsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUN0RCxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEFBQzVELEFBQ0EsQUFFQSxBQUNFLEFBQ0EsQUFDQSxBQUVBLEFBQ0UsQUFFQSxBQUVFLEFBSUEsQUFJQSxBQUNBLEFBR0YsQUFDQSxBQUNBLEFBQ0EsQUFBb0IsQUFHdEIsQUFFQSxBQUNFLEFBQ0EsQUFBc0QsQUFHeEQsQUFBbUQsQUFHckQsQUFBNkI7O0FDMUQ3QixNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUM7QUFDN0IsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDckQsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDckQsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDekQsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7O0FBRXpELE1BQU0sYUFBYSxHQUFHLENBQUMsUUFBUSxLQUFLO0VBQ2xDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQztFQUN6RCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0NBQ3BCLENBQUM7O0FBRUYsTUFBTSxpQkFBaUIsR0FBRyxNQUFNO0VBQzlCLE1BQU0sY0FBYyxHQUFHO0lBQ3JCLElBQUksRUFBRSxhQUFhLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25ELEtBQUssRUFBRSxhQUFhLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JELEtBQUssRUFBRSxhQUFhLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0dBQ3RELENBQUM7O0VBRUYsTUFBTSxRQUFRLEdBQUcsZUFBZSxJQUFJLGNBQWMsQ0FBQyxLQUFLLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQ2pGLE1BQU0sUUFBUSxHQUFHLGVBQWUsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDOztFQUV4RCxRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQztFQUMxQixRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQztFQUMxQixTQUFTLENBQUMsV0FBVyxHQUFHLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFDekMsU0FBUyxDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0NBQzFDLENBQUMsQUFFRixBQUEyQiw7Oyw7OyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
